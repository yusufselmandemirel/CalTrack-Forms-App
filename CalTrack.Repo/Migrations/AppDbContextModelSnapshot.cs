// <auto-generated />
using System;
using CalTrack.Repo.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CalTrack.Repo.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.35")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CalTrack.Core.Concretes.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 818, DateTimeKind.Local).AddTicks(9796),
                            Name = "Ana Yemekler",
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 818, DateTimeKind.Local).AddTicks(9805),
                            Name = "Atıştırmalıklar",
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 818, DateTimeKind.Local).AddTicks(9806),
                            Name = "İçecekler",
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 818, DateTimeKind.Local).AddTicks(9807),
                            Name = "Salatalar",
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 818, DateTimeKind.Local).AddTicks(9808),
                            Name = "Çorbalar",
                            Status = 0
                        },
                        new
                        {
                            Id = 6,
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 818, DateTimeKind.Local).AddTicks(9808),
                            Name = "Tatlılar",
                            Status = 0
                        },
                        new
                        {
                            Id = 7,
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 818, DateTimeKind.Local).AddTicks(9809),
                            Name = "Et Yemekleri",
                            Status = 0
                        },
                        new
                        {
                            Id = 8,
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 818, DateTimeKind.Local).AddTicks(9810),
                            Name = "Sebze Yemekleri",
                            Status = 0
                        },
                        new
                        {
                            Id = 9,
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 818, DateTimeKind.Local).AddTicks(9811),
                            Name = "Deniz Ürünleri",
                            Status = 0
                        },
                        new
                        {
                            Id = 10,
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 818, DateTimeKind.Local).AddTicks(9812),
                            Name = "Hamur İşleri",
                            Status = 0
                        },
                        new
                        {
                            Id = 11,
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 818, DateTimeKind.Local).AddTicks(9812),
                            Name = "Kahvaltılıklar",
                            Status = 0
                        },
                        new
                        {
                            Id = 12,
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 818, DateTimeKind.Local).AddTicks(9813),
                            Name = "Dondurmalar",
                            Status = 0
                        },
                        new
                        {
                            Id = 13,
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 818, DateTimeKind.Local).AddTicks(9814),
                            Name = "Meyve",
                            Status = 0
                        },
                        new
                        {
                            Id = 14,
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 818, DateTimeKind.Local).AddTicks(9815),
                            Name = "Soslar",
                            Status = 0
                        },
                        new
                        {
                            Id = 15,
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 818, DateTimeKind.Local).AddTicks(9816),
                            Name = "Makarna Çeşitleri",
                            Status = 0
                        });
                });

            modelBuilder.Entity("CalTrack.Core.Concretes.Food", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PortionCalorie")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Foods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 7,
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 819, DateTimeKind.Local).AddTicks(75),
                            Name = "Köfte",
                            PhotoPath = "C:\\Users\\Lenovo\\Desktop\\CalTrack.Core\\FoodPhotos\\Köfte.jpg",
                            PortionCalorie = 250m,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 10,
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 819, DateTimeKind.Local).AddTicks(77),
                            Name = "Börek",
                            PhotoPath = "C:\\Users\\Lenovo\\Desktop\\CalTrack.Core\\FoodPhotos\\Börek.jpg",
                            PortionCalorie = 300m,
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 819, DateTimeKind.Local).AddTicks(78),
                            Name = "Çay",
                            PhotoPath = "C:\\Users\\Lenovo\\Desktop\\CalTrack.Core\\FoodPhotos\\Çay.jpg",
                            PortionCalorie = 2m,
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 819, DateTimeKind.Local).AddTicks(79),
                            Name = "Kısır",
                            PhotoPath = "C:\\Users\\Lenovo\\Desktop\\CalTrack.Core\\FoodPhotos\\Kısır.jpeg",
                            PortionCalorie = 250m,
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 819, DateTimeKind.Local).AddTicks(80),
                            Name = "Mercimek Çorbası",
                            PhotoPath = "C:\\Users\\Lenovo\\Desktop\\CalTrack.Core\\FoodPhotos\\MercimekÇorbası.jpg",
                            PortionCalorie = 150m,
                            Status = 0
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 6,
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 819, DateTimeKind.Local).AddTicks(81),
                            Name = "Kadayıf",
                            PhotoPath = "C:\\Users\\Lenovo\\Desktop\\CalTrack.Core\\FoodPhotos\\Kadayıf.jpg",
                            PortionCalorie = 350m,
                            Status = 0
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 7,
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 819, DateTimeKind.Local).AddTicks(82),
                            Name = "Tavuk Şiş",
                            PhotoPath = "C:\\Users\\Lenovo\\Desktop\\CalTrack.Core\\FoodPhotos\\Tavuk Şil.png",
                            PortionCalorie = 270m,
                            Status = 0
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 8,
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 819, DateTimeKind.Local).AddTicks(83),
                            Name = "Sebze Sote",
                            PhotoPath = "C:\\Users\\Lenovo\\Desktop\\CalTrack.Core\\FoodPhotos\\Sebze Sote.jpg",
                            PortionCalorie = 180m,
                            Status = 0
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 9,
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 819, DateTimeKind.Local).AddTicks(84),
                            Name = "Balık Izgara",
                            PhotoPath = "C:\\Users\\Lenovo\\Desktop\\CalTrack.Core\\FoodPhotos\\Balık Izgara.jpg",
                            PortionCalorie = 220m,
                            Status = 0
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 10,
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 819, DateTimeKind.Local).AddTicks(85),
                            Name = "Poğaça",
                            PhotoPath = "C:\\Users\\Lenovo\\Desktop\\CalTrack.Core\\FoodPhotos\\Poğaça.jpg",
                            PortionCalorie = 230m,
                            Status = 0
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 11,
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 819, DateTimeKind.Local).AddTicks(86),
                            Name = "Menemen",
                            PhotoPath = "C:\\Users\\Lenovo\\Desktop\\CalTrack.Core\\FoodPhotos\\Menemen.jpg",
                            PortionCalorie = 150m,
                            Status = 0
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 12,
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 819, DateTimeKind.Local).AddTicks(87),
                            Name = "Çikolatalı Dondurma",
                            PhotoPath = "C:\\Users\\Lenovo\\Desktop\\CalTrack.Core\\FoodPhotos\\Çikolatalı Dondurma.jpeg",
                            PortionCalorie = 180m,
                            Status = 0
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 13,
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 819, DateTimeKind.Local).AddTicks(88),
                            Name = "Meyve Salatası",
                            PhotoPath = "C:\\Users\\Lenovo\\Desktop\\CalTrack.Core\\FoodPhotos\\Meyve Salatası.png",
                            PortionCalorie = 120m,
                            Status = 0
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 8,
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 819, DateTimeKind.Local).AddTicks(89),
                            Name = "Zeytinyağlı Enginar",
                            PhotoPath = "C:\\Users\\Lenovo\\Desktop\\CalTrack.Core\\FoodPhotos\\Enginar.jpg",
                            PortionCalorie = 140m,
                            Status = 0
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 14,
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 819, DateTimeKind.Local).AddTicks(90),
                            Name = "Tatlı Sos",
                            PhotoPath = "C:\\Users\\Lenovo\\Desktop\\CalTrack.Core\\FoodPhotos\\Tatlı Sos.jpg",
                            PortionCalorie = 80m,
                            Status = 0
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 15,
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 819, DateTimeKind.Local).AddTicks(91),
                            Name = "Spagetti",
                            PhotoPath = "C:\\Users\\Lenovo\\Desktop\\CalTrack.Core\\FoodPhotos\\Spagetti.jpg",
                            PortionCalorie = 200m,
                            Status = 0
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 10,
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 819, DateTimeKind.Local).AddTicks(92),
                            Name = "Simit",
                            PhotoPath = "C:\\Users\\Lenovo\\Desktop\\CalTrack.Core\\FoodPhotos\\Simit.jpg",
                            PortionCalorie = 280m,
                            Status = 0
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 3,
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 819, DateTimeKind.Local).AddTicks(93),
                            Name = "Limonata",
                            PhotoPath = "C:\\Users\\Lenovo\\Desktop\\CalTrack.Core\\FoodPhotos\\lemonade.jpg",
                            PortionCalorie = 100m,
                            Status = 0
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 5,
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 819, DateTimeKind.Local).AddTicks(94),
                            Name = "Sebze Çorbası",
                            PhotoPath = "C:\\Users\\Lenovo\\Desktop\\CalTrack.Core\\FoodPhotos\\Sebze Çorbası.jpg",
                            PortionCalorie = 120m,
                            Status = 0
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 6,
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 819, DateTimeKind.Local).AddTicks(132),
                            Name = "Çikolatalı Kek",
                            PhotoPath = "C:\\Users\\Lenovo\\Desktop\\CalTrack.Core\\FoodPhotos\\Çikolatalı Kek.jpg",
                            PortionCalorie = 350m,
                            Status = 0
                        });
                });

            modelBuilder.Entity("CalTrack.Core.Concretes.FoodMeal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FoodId")
                        .HasColumnType("int");

                    b.Property<int?>("MealId")
                        .HasColumnType("int");

                    b.Property<string>("MealType")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Portion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FoodId");

                    b.HasIndex("MealId");

                    b.HasIndex("UserId");

                    b.ToTable("FoodMeals");
                });

            modelBuilder.Entity("CalTrack.Core.Concretes.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MealType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("CalTrack.Core.Concretes.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ActivityLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActivityLevel = "active",
                            BirthDate = new DateTime(1997, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "İstanbul",
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 819, DateTimeKind.Local).AddTicks(1529),
                            Height = 182m,
                            LastName = "Admin",
                            Name = "Admin",
                            Password = "Admin123*",
                            Status = 0,
                            Username = "admin@gmail.com",
                            Width = 100m,
                            gender = "Male"
                        },
                        new
                        {
                            Id = 2,
                            ActivityLevel = "moderate",
                            BirthDate = new DateTime(1995, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Ankara",
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 819, DateTimeKind.Local).AddTicks(1853),
                            Height = 165m,
                            LastName = "Kaya",
                            Name = "Emine",
                            Password = "Emine123*",
                            Status = 0,
                            Username = "emine.kaya@hotmail.com",
                            Width = 60m,
                            gender = "Female"
                        },
                        new
                        {
                            Id = 3,
                            ActivityLevel = "sedentary",
                            BirthDate = new DateTime(1987, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "İzmir",
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 819, DateTimeKind.Local).AddTicks(1948),
                            Height = 180m,
                            LastName = "Öztürk",
                            Name = "Mehmet",
                            Password = "Mehmet123*",
                            Status = 0,
                            Username = "mehmet@gmail.com",
                            Width = 90m,
                            gender = "Male"
                        },
                        new
                        {
                            Id = 4,
                            ActivityLevel = "active",
                            BirthDate = new DateTime(1992, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Bursa",
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 819, DateTimeKind.Local).AddTicks(2033),
                            Height = 160m,
                            LastName = "Demir",
                            Name = "Zeynep",
                            Password = "Zeynep123*",
                            Status = 0,
                            Username = "zeynep@gmail.com",
                            Width = 55m,
                            gender = "Female"
                        },
                        new
                        {
                            Id = 5,
                            ActivityLevel = "moderate",
                            BirthDate = new DateTime(1985, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Antalya",
                            CreateDate = new DateTime(2024, 12, 12, 14, 51, 4, 819, DateTimeKind.Local).AddTicks(2090),
                            Height = 185m,
                            LastName = "Çelik",
                            Name = "Murat",
                            Password = "Murat123*",
                            Status = 0,
                            Username = "murat@gmail.com",
                            Width = 95m,
                            gender = "Male"
                        });
                });

            modelBuilder.Entity("CalTrack.Core.Concretes.Food", b =>
                {
                    b.HasOne("CalTrack.Core.Concretes.Category", "Category")
                        .WithMany("Foods")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CalTrack.Core.Concretes.FoodMeal", b =>
                {
                    b.HasOne("CalTrack.Core.Concretes.Food", "Food")
                        .WithMany("FoodMeals")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CalTrack.Core.Concretes.Meal", null)
                        .WithMany("FoodMeals")
                        .HasForeignKey("MealId");

                    b.HasOne("CalTrack.Core.Concretes.User", "User")
                        .WithMany("FoodMeals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CalTrack.Core.Concretes.Category", b =>
                {
                    b.Navigation("Foods");
                });

            modelBuilder.Entity("CalTrack.Core.Concretes.Food", b =>
                {
                    b.Navigation("FoodMeals");
                });

            modelBuilder.Entity("CalTrack.Core.Concretes.Meal", b =>
                {
                    b.Navigation("FoodMeals");
                });

            modelBuilder.Entity("CalTrack.Core.Concretes.User", b =>
                {
                    b.Navigation("FoodMeals");
                });
#pragma warning restore 612, 618
        }
    }
}
